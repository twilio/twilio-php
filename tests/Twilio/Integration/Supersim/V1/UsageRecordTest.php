<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Supersim\V1;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class UsageRecordTest extends HolodeckTestCase {
    public function testReadRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->supersim->v1->usageRecords->read();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $this->assertRequest(new Request(
            'get',
            'https://supersim.twilio.com/v1/UsageRecords'
        ));
    }

    public function testReadAllResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "usage_records": [
                    {
                        "period": {
                            "start_time": "2015-05-01T20:00:00Z",
                            "end_time": "2015-06-01T20:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": null
                    }
                ],
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/UsageRecords?PageSize=50&Page=0",
                    "key": "usage_records",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/UsageRecords?PageSize=50&Page=0"
                }
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->usageRecords->read();

        $this->assertNotNull($actual);
    }

    public function testReadAllDayResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "usage_records": [
                    {
                        "period": {
                            "start_time": "2019-05-01T00:00:00Z",
                            "end_time": "2019-05-03T00:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": null
                    },
                    {
                        "period": {
                            "start_time": "2019-05-03T00:00:00Z",
                            "end_time": "2019-05-04T00:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": null
                    }
                ],
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/UsageRecords?Granularity=day&PageSize=50&Page=0",
                    "key": "usage_records",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/UsageRecords?Granularity=day&PageSize=50&Page=0"
                }
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->usageRecords->read();

        $this->assertNotNull($actual);
    }

    public function testReadAllHourResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "usage_records": [
                    {
                        "period": {
                            "start_time": "2019-05-01T00:00:00Z",
                            "end_time": "2019-05-01T01:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": null
                    },
                    {
                        "period": {
                            "start_time": "2019-05-01T01:00:00Z",
                            "end_time": "2019-05-01T02:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": null
                    }
                ],
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/UsageRecords?Granularity=hour&PageSize=50&Page=0",
                    "key": "usage_records",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/UsageRecords?Granularity=hour&PageSize=50&Page=0"
                }
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->usageRecords->read();

        $this->assertNotNull($actual);
    }

    public function testReadDaySimFilterResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "usage_records": [
                    {
                        "period": {
                            "start_time": "2019-05-01T00:00:00Z",
                            "end_time": "2019-05-03T00:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                    },
                    {
                        "period": {
                            "start_time": "2019-05-03T00:00:00Z",
                            "end_time": "2019-05-04T00:00:00Z"
                        },
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "data_upload": 1000,
                        "data_download": 1000,
                        "data_total": 2000,
                        "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                    }
                ],
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/UsageRecords?Sim=HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&Granularity=day&PageSize=50&Page=0",
                    "key": "usage_records",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/UsageRecords?Sim=HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&Granularity=day&PageSize=50&Page=0"
                }
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->usageRecords->read();

        $this->assertNotNull($actual);
    }
}