<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Conversations\V1;

use Twilio\Options;
use Twilio\Values;

/**
 * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
 */
abstract class UserOptions {
    /**
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @param string $roleSid The SID of the Role to assign to the user
     * @return CreateUserOptions Options builder
     */
    public static function create(string $friendlyName = Values::NONE, string $attributes = Values::NONE, string $roleSid = Values::NONE): CreateUserOptions {
        return new CreateUserOptions($friendlyName, $attributes, $roleSid);
    }

    /**
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @param string $roleSid The SID of the Role to assign to the user
     * @return UpdateUserOptions Options builder
     */
    public static function update(string $friendlyName = Values::NONE, string $attributes = Values::NONE, string $roleSid = Values::NONE): UpdateUserOptions {
        return new UpdateUserOptions($friendlyName, $attributes, $roleSid);
    }
}

class CreateUserOptions extends Options {
    /**
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @param string $roleSid The SID of the Role to assign to the user
     */
    public function __construct(string $friendlyName = Values::NONE, string $attributes = Values::NONE, string $roleSid = Values::NONE) {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['attributes'] = $attributes;
        $this->options['roleSid'] = $roleSid;
    }

    /**
     * The string that you assigned to describe the resource.
     *
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @return $this Fluent Builder
     */
    public function setFriendlyName(string $friendlyName): self {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }

    /**
     * The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.
     *
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @return $this Fluent Builder
     */
    public function setAttributes(string $attributes): self {
        $this->options['attributes'] = $attributes;
        return $this;
    }

    /**
     * The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the user.
     *
     * @param string $roleSid The SID of the Role to assign to the user
     * @return $this Fluent Builder
     */
    public function setRoleSid(string $roleSid): self {
        $this->options['roleSid'] = $roleSid;
        return $this;
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        $options = \http_build_query(Values::of($this->options), '', ' ');
        return '[Twilio.Conversations.V1.CreateUserOptions ' . $options . ']';
    }
}

class UpdateUserOptions extends Options {
    /**
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @param string $roleSid The SID of the Role to assign to the user
     */
    public function __construct(string $friendlyName = Values::NONE, string $attributes = Values::NONE, string $roleSid = Values::NONE) {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['attributes'] = $attributes;
        $this->options['roleSid'] = $roleSid;
    }

    /**
     * The string that you assigned to describe the resource.
     *
     * @param string $friendlyName The string that you assigned to describe the
     *                             resource
     * @return $this Fluent Builder
     */
    public function setFriendlyName(string $friendlyName): self {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }

    /**
     * The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.
     *
     * @param string $attributes The JSON Object string that stores
     *                           application-specific data
     * @return $this Fluent Builder
     */
    public function setAttributes(string $attributes): self {
        $this->options['attributes'] = $attributes;
        return $this;
    }

    /**
     * The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the user.
     *
     * @param string $roleSid The SID of the Role to assign to the user
     * @return $this Fluent Builder
     */
    public function setRoleSid(string $roleSid): self {
        $this->options['roleSid'] = $roleSid;
        return $this;
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        $options = \http_build_query(Values::of($this->options), '', ' ');
        return '[Twilio.Conversations.V1.UpdateUserOptions ' . $options . ']';
    }
}