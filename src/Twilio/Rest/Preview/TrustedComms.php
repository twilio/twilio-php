<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Preview;

use Twilio\Domain;
use Twilio\Exceptions\TwilioException;
use Twilio\InstanceContext;
use Twilio\Rest\Preview\TrustedComms\BrandedCallList;
use Twilio\Rest\Preview\TrustedComms\BusinessList;
use Twilio\Rest\Preview\TrustedComms\CpsList;
use Twilio\Rest\Preview\TrustedComms\CurrentCallList;
use Twilio\Rest\Preview\TrustedComms\DeviceList;
use Twilio\Rest\Preview\TrustedComms\PhoneCallList;
use Twilio\Version;

/**
 * @property BrandedCallList $brandedCalls
 * @property BusinessList $businesses
 * @property CpsList $cps
 * @property CurrentCallList $currentCalls
 * @property DeviceList $devices
 * @property PhoneCallList $phoneCalls
 * @method \Twilio\Rest\Preview\TrustedComms\BusinessContext businesses(string $sid)
 */
class TrustedComms extends Version {
    protected $_brandedCalls;
    protected $_businesses;
    protected $_cps;
    protected $_currentCalls;
    protected $_devices;
    protected $_phoneCalls;

    /**
     * Construct the TrustedComms version of Preview
     *
     * @param Domain $domain Domain that contains the version
     */
    public function __construct(Domain $domain) {
        parent::__construct($domain);
        $this->version = 'TrustedComms';
    }

    protected function getBrandedCalls(): BrandedCallList {
        if (!$this->_brandedCalls) {
            $this->_brandedCalls = new BrandedCallList($this);
        }
        return $this->_brandedCalls;
    }

    protected function getBusinesses(): BusinessList {
        if (!$this->_businesses) {
            $this->_businesses = new BusinessList($this);
        }
        return $this->_businesses;
    }

    protected function getCps(): CpsList {
        if (!$this->_cps) {
            $this->_cps = new CpsList($this);
        }
        return $this->_cps;
    }

    protected function getCurrentCalls(): CurrentCallList {
        if (!$this->_currentCalls) {
            $this->_currentCalls = new CurrentCallList($this);
        }
        return $this->_currentCalls;
    }

    protected function getDevices(): DeviceList {
        if (!$this->_devices) {
            $this->_devices = new DeviceList($this);
        }
        return $this->_devices;
    }

    protected function getPhoneCalls(): PhoneCallList {
        if (!$this->_phoneCalls) {
            $this->_phoneCalls = new PhoneCallList($this);
        }
        return $this->_phoneCalls;
    }

    /**
     * Magic getter to lazy load root resources
     *
     * @param string $name Resource to return
     * @return \Twilio\ListResource The requested resource
     * @throws TwilioException For unknown resource
     */
    public function __get(string $name) {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->$method();
        }

        throw new TwilioException('Unknown resource ' . $name);
    }

    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments): InstanceContext {
        $property = $this->$name;
        if (\method_exists($property, 'getContext')) {
            return \call_user_func_array(array($property, 'getContext'), $arguments);
        }

        throw new TwilioException('Resource does not have a context');
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        return '[Twilio.Preview.TrustedComms]';
    }
}