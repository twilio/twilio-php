<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Preview\Trustedcomms;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class PhoneCallTest extends HolodeckTestCase {
    public function testCreateRequest() {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->preview->trustedComms->phoneCalls->create("from", "to", "url");
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $values = array('From' => "from", 'To' => "to", 'Url' => "url", );

        $this->assertRequest(new Request(
            'post',
            'https://preview.twilio.com/TrustedComms/Business/PhoneCalls',
            null,
            $values
        ));
    }

    public function testCreateResponse() {
        $this->holodeck->mock(new Response(
            201,
            '
            {
                "sid": "CAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "from": "+15000000000",
                "to": "+573000000000",
                "reason": "Hello Jhon, your appointment has been confirmed.",
                "created_at": "2019-05-01T20:00:00Z",
                "url": "https://preview.twilio.com/TrustedComms/Business/PhoneCalls"
            }
            '
        ));

        $actual = $this->twilio->preview->trustedComms->phoneCalls->create("from", "to", "url");

        $this->assertNotNull($actual);
    }
}